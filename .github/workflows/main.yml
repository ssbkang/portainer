name: CI

on: 
  push:
    branches: 
      - '*'
      - '*/*'
      - '!master'
  pull_request:
    branches: 
      - '*'

jobs:
  # build_artefacts:
  #   strategy:
  #     matrix:
  #       os: [linux, windows]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout the Current Branch
  #       uses: actions/checkout@v2
  #     - name: Setup Go
  #       uses: actions/setup-go@v1.0.0
  #       with:
  #         version: 1.13.1
  #     - name: Setup NodeJS and Yarn
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '11.15.0'
  #     - name: Build Linux & Windows Portainer Binaries
  #       run: |
  #         yarn install          
  #         grunt release:${{ matrix.os }}:amd64 --gruntfile gruntfile.js
  #         mv dist dist_${{ matrix.os }}         
  #     - name: Upload Artefact
  #       uses: actions/upload-artifact@v1.0.0
  #       with:
  #         name: dist_${{ matrix.os }}
  #         path: dist_${{ matrix.os }}
  build_and_push_container_images:
    # needs: build_artefacts
    strategy:
      matrix:
        config: 
          - {os: linux, distribution: ubuntu-18.04}
          - {os: windows, distribution: windows-2019}
    
    runs-on: ${{ matrix.config.distribution }}
    steps:
      - name: Checkout the Current Branch
        uses: actions/checkout@v2
      # - name: Download artifact
      #   uses: actions/download-artifact@v1.0.0
      #   with:
      #     name: dist_${{ matrix.config.os }}
      #     path: dist_${{ matrix.config.os }}
      - name: Docker Login
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          # login-server: # default is https://index.docker.io/v1/
      - name: Build and Push Linux Docker Images
        if: matrix.config.os == 'linux'
        run: |
          mv dist_${{ matrix.config.os }} dist
          ls
      - name: Build and Push Windows Docker Images
        if: matrix.config.os == 'windows'
        run: |
          mv dist_${{ matrix.config.os }} dist
          ls
          
